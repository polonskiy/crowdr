#!/bin/bash

[[ -n "$CROWDR_TRACE" || -n "$CROWDR_DRY" ]] && set -x
[[ -n "$CROWDR_DRY"   ]] && { alias docker='echo docker'; shopt -s expand_aliases; HOOKEXEC=cat;} || HOOKEXEC=source
CROWDR_CFG=${CROWDR_CFG:-crowdr.cfg.sh}
CROWDR_DIR="$(dirname CROWDR_CFG)"
CROWDR_HOOKDIR="$CROWDR_DIR/hooks"
declare -A opts_run
declare -A opts_build
declare -A opts_global
declare -A opts_image
declare -A opts_command
deps=()
list=""

trap exit INT

command_build() {
    for c in $list; do
        docker build -t $c ${opts_build[$c]} || exit
    done
}

command_run() {
    docker rm -f $(tac <<< "$list") &>/dev/null
    for c in $list; do
        image=$c
        [[ -n "${opts_image[$c]}" ]] && image="${opts_image[$c]}"
        docker run -d -t --name $c ${opts_run[$c]} "$image" ${opts_command[$c]} > /dev/null && echo $c
    done
}

command_start() {
    docker start $list
}

command_stop() {
    docker stop $(tac <<< "$list")
}

command_stats() {
    docker stats $list
}

command_ps() {
    local out="$(docker ps)"
    local list=""
    echo "$(head -1 <<< "$out")"
    list="$(awk -v regex="${opts_global[project]}" '$NF ~ regex' <<< "$out")"
    [[ -n "$list" ]] && echo "$list"
}

command_ip() {
    local ip=""
    local running=""
    for c in $list; do
        running=$(docker inspect --format '{{.State.Running}}' $c)
        ip=$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' $c)
        [[ "$running" == "false" ]] && ip=""
        printf '%-30s %-30s\n' $c "$ip"
    done
}

command_shell() {
    local name="$1"
    docker exec -it ${opts_global[project]}_$name bash
}

command_exec() {
    local name="$1"
    shift
    docker exec -it ${opts_global[project]}_$name "$@"
}

command_pipe() {
    local name="$1"
    shift
    docker exec -i ${opts_global[project]}_$name "$@"
}

command_restart() {
    echo "Stopping..."
    docker stop $(tac <<< "$list")
    echo
    echo "Starting..."
    docker start $list
}

parse_cfg() {
    local container=""
    local option=""
    local value=""
    local link=""
    local alias=""
    opts_global[project]=$(basename $PWD)
    while read container option value; do
        if [[ "$container" == "global" ]]; then
            opts_global[$option]="$value"
            continue
        fi
        container="${opts_global[project]}_$container"
        deps+=("$container $container")
        case $option in
            command)
                opts_command[$container]=$value
                continue
                ;;
            image)
                opts_image[$container]=$value
                continue
                ;;
            build)
                opts_build[$container]=$value
                continue
                ;;
            link)
                link="${value%%:*}"
                link="${opts_global[project]}_$link"
                alias="${value##*:}"
                deps+=("$container $link")
                value="$link:$alias"
                ;;
        esac
        opts_run[$container]+=" --$option=$value"
    done < <(. $CROWDR_CFG | grep -vP '(^#)|(^$)')
    list="$(printf '%s\n' "${deps[@]}" | tsort | tac)"
}

cmd="${1:-run}"
shift
parse_cfg
[[ -x $CROWDR_HOOKDIR/$cmd.before ]] && $HOOKEXEC $CROWDR_HOOKDIR/$cmd.before
command_$cmd "$@"
[[ -x $CROWDR_HOOKDIR/$cmd.after ]] && $HOOKEXEC $CROWDR_HOOKDIR/$cmd.after
